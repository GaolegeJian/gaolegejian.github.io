<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GaoJian&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-10-11T10:21:20.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Gao Jian</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>storyboard文件的认识和UIView控件</title>
    <link href="http://yoursite.com/2016/10/08/storyboard%E6%96%87%E4%BB%B6%E7%9A%84%E8%AE%A4%E8%AF%86%E5%92%8CUIView%E6%8E%A7%E4%BB%B6/"/>
    <id>http://yoursite.com/2016/10/08/storyboard文件的认识和UIView控件/</id>
    <published>2016-10-08T03:44:56.000Z</published>
    <updated>2016-10-11T10:21:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="storyboard文件的认识"><a href="#storyboard文件的认识" class="headerlink" title="storyboard文件的认识"></a>storyboard文件的认识</h1><ul>
<li>作用：描述软件界面</li>
<li>程序启动的简单过程<ul>
<li>程序一启动，就会加载main.storyboard文件</li>
<li>会创建箭头所指向的控制器，并且显示控制器所管理的软件界面</li>
</ul>
</li>
<li>配置程序一启动就会加载storyboard文件<br><img src="/image/%E7%A8%8B%E5%BA%8F%E5%85%A5%E5%8F%A3%E8%AE%BE%E7%BD%AE%E5%8A%A0%E8%BD%BDstoryboard.png" alt=""></li>
</ul>
<h3 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h3><ul>
<li>概念: 凡是继承自UIViewController的对象，都叫做控制器</li>
<li>注意: 每一个控制器都会专门管理一个软件界面</li>
<li>作用: 负责处理软件界面的各种事件，负责软件界面的创建和销毁</li>
</ul>
<h3 id="IBAction"><a href="#IBAction" class="headerlink" title="IBAction"></a>IBAction</h3><ul>
<li>只能修饰方法的返回值类型</li>
<li>被IBAction修饰的方法<ul>
<li>能拖线到storyboard中</li>
<li>返回值类型实际是void</li>
</ul>
</li>
<li>使用格式</li>
</ul>
<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">`- (<span class="keyword">IBAction</span>)buttonClick</div><div class="line">&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>`</p>
<h3 id="IBOutlet"><a href="#IBOutlet" class="headerlink" title="IBOutlet"></a>IBOutlet</h3><ul>
<li>只能修饰属性</li>
<li>被IBOutlet修饰的属性</li>
<li>能拖线到storyboard中</li>
<li>使用格式<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">`<span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>) <span class="keyword">IBOutlet</span> <span class="built_in">UILabel</span> *label;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>`</p>
<h3 id="关于IBAction、IBOutlet前缀IB的解释"><a href="#关于IBAction、IBOutlet前缀IB的解释" class="headerlink" title="关于IBAction、IBOutlet前缀IB的解释"></a>关于IBAction、IBOutlet前缀IB的解释</h3><ul>
<li>全称: Interfce Builder</li>
<li>以前的UI界面开发模式: Xcode3 + Interfce Builder</li>
<li>从Xcode4开始，Interfce Builder已经整合到Xcode中了</li>
</ul>
<h3 id="类扩展-Class-Extension"><a href="#类扩展-Class-Extension" class="headerlink" title="类扩展(Class Extension)"></a>类扩展(Class Extension)</h3><ul>
<li>作用<ul>
<li>能为某个类增加额外的属性、成员变量、方法声明</li>
<li>一般将类扩展写到.m文件中</li>
<li>一般将一些私有的属性写到类扩展</li>
</ul>
</li>
<li>使用格式<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">`<span class="class"><span class="keyword">@interface</span> 类名()</span></div><div class="line"><span class="comment">/* 属性、成员变量、方法声明 */</span></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>`- 与分类的区别</p>
<ul>
<li>分类的小括号必须有名字<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">`<span class="class"><span class="keyword">@interface</span> 类名(分类名字)</span></div><div class="line"><span class="comment">/* 方法声明 */</span></div><div class="line"><span class="keyword">@end</span></div><div class="line"><span class="class"><span class="keyword">@implementation</span> 类名(分类名字)</span></div><div class="line"><span class="comment">/* 方法实现 */</span></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>`  - 分类只能扩充类方法</p>
<ul>
<li>如果在分类中声明了一个属性，分类只会生成这个属性的get/set方法声明</li>
</ul>
<h3 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h3><ul>
<li><p>第1个错误</p>
<ul>
<li>错误描述:<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">`[\&lt;ViewController <span class="number">0x7fdc0152d300</span>\&gt; setValue:forUndefinedKey:](): <span class="keyword">this</span> <span class="keyword">class</span> is not key value coding-compliant <span class="keyword">for</span> the key label.</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<p>`  - 原因：IBOutlet属性代码被删掉了，但是属性连线还在</p>
<ul>
<li>解决：将残留的连线删掉</li>
</ul>
<ul>
<li><p>第2个错误</p>
<ul>
<li>错误描述：<figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">`-[ViewController blueClick](): unrecognized selector sent to instance <span class="number">0x7ff59d014320</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<p>`  - 原因：调用了一个不存在的方法</p>
<ul>
<li>解决：认真检查方法名，使用正确并且存在的方法名</li>
</ul>
<h3 id="项目的常见属性"><a href="#项目的常见属性" class="headerlink" title="项目的常见属性"></a>项目的常见属性</h3><ul>
<li>Product Name<ul>
<li>产品名称</li>
<li>项目名称</li>
<li>软件名称</li>
</ul>
</li>
<li>Organization Name<ul>
<li>公司名称</li>
</ul>
</li>
<li>Organization Identifier<ul>
<li>公司的唯一标识</li>
<li>一般用网站域名的反写形式</li>
</ul>
</li>
<li>Bundle Identifier<ul>
<li>软件的唯一标识</li>
<li>默认 == Organization Identifier + ProductName</li>
</ul>
</li>
</ul>
<h3 id="第一个iOS程序-改变文字的属性"><a href="#第一个iOS程序-改变文字的属性" class="headerlink" title="第一个iOS程序-改变文字的属性"></a>第一个iOS程序-改变文字的属性</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">`- (<span class="keyword">IBAction</span>)clickButtonRed</div><div class="line">&#123;</div><div class="line"><span class="comment">// 改变文本颜色</span></div><div class="line"><span class="keyword">self</span>.label.textColor = [<span class="built_in">UIColor</span> redColor]();</div><div class="line"><span class="comment">// 改变背景颜色</span></div><div class="line"><span class="keyword">self</span>.label.backgroundColor = [<span class="built_in">UIColor</span> greenColor]();</div><div class="line"><span class="comment">// 文字居中</span></div><div class="line"><span class="keyword">self</span>.label.textAlignment = <span class="built_in">NSTextAlignmentCenter</span>;</div><div class="line"><span class="comment">// 改变文字内容</span></div><div class="line"><span class="keyword">self</span>.label.text = <span class="string">@"红色"</span>;</div><div class="line"><span class="comment">// 改变字体大小</span></div><div class="line"><span class="keyword">self</span>.label.font = [<span class="built_in">UIFont</span> systemFontOfSize:<span class="number">20.</span>f]();</div><div class="line"><span class="keyword">self</span>.redbutton.backgroundColor = [<span class="built_in">UIColor</span> redColor]();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>`### 模拟器常见功能和快捷键</p>
<ul>
<li>commend + h 返回桌面</li>
<li>commend + hh 删除程序</li>
</ul>
<h1 id="UIView"><a href="#UIView" class="headerlink" title="UIView"></a>UIView</h1><h3 id="父子控件"><a href="#父子控件" class="headerlink" title="父子控件"></a>父子控件</h3><ul>
<li>01-每个控件都是一个容器，能容纳其他控件</li>
<li>02-内部小控件是大控件的子控件</li>
<li>03-大控件是内部小控件的父控件</li>
<li>04-每一个控制器(UIViewController)内部都有一个默认的Uivew属性</li>
</ul>
<h3 id="UIView常见属性"><a href="#UIView常见属性" class="headerlink" title="UIView常见属性"></a>UIView常见属性</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">`<span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">readonly</span>) <span class="built_in">UIView</span> *superview;</div><div class="line"> 获得自己的父控件对象</div></pre></td></tr></table></figure>
<p>````objc<br>`@property(nonatomic,readonly,copy) NSArray *subviews;<br> 获得自己的所有子控件对象<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">````objc</div><div class="line">`@property(nonatomic) NSInteger tag;</div><div class="line"> 控件的ID(标识)，父控件可以通过tag来找到对应的子控件</div></pre></td></tr></table></figure></p>
<p>````objc<br>`@property(nonatomic) CGAffineTransform transform;<br> 控件的形变属性(可以设置旋转角度、比例缩放、平移等属性)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">`</div><div class="line">### UIView常见方法</div><div class="line">```objc</div><div class="line">`- (void)addSubview:(UIView *)view;</div><div class="line"> 添加一个子控件view</div></pre></td></tr></table></figure></p>
<p>`<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">`- (<span class="keyword">void</span>)removeFromSuperview;</div><div class="line"> 从父控件中移除</div></pre></td></tr></table></figure></p>
<p>`<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">`- (<span class="built_in">UIView</span> *)viewWithTag:(<span class="built_in">NSInteger</span>)tag;</div><div class="line"> 根据一个tag标识找出对应的控件（一般都是子控件）</div></pre></td></tr></table></figure></p>
<p>`</p>
<h3 id="UIView位置和尺寸"><a href="#UIView位置和尺寸" class="headerlink" title="UIView位置和尺寸"></a>UIView位置和尺寸</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">`<span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">CGRect</span> frame;</div><div class="line"> 控件矩形框在父控件中的位置和尺寸(以父控件的左上角为坐标原点)</div></pre></td></tr></table></figure>
<p>`<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">`<span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">CGRect</span> bounds;</div><div class="line"> 控件矩形框的位置和尺寸(以自己左上角为坐标原点，所以bounds的x、y一般为<span class="number">0</span>)</div></pre></td></tr></table></figure></p>
<p>`<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">`<span class="keyword">@property</span>(<span class="keyword">nonatomic</span>) <span class="built_in">CGPoint</span> center;</div><div class="line"> 控件中点的位置(以父控件的左上角为坐标原点)</div></pre></td></tr></table></figure></p>
<p>`</p>
<h3 id="UIKit坐标系"><a href="#UIKit坐标系" class="headerlink" title="UIKit坐标系"></a>UIKit坐标系</h3><ul>
<li>在UIKit中，坐标系的原点(0，0)在左上角，x值向右正向延伸，y值向下正向延伸</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;storyboard文件的认识&quot;&gt;&lt;a href=&quot;#storyboard文件的认识&quot; class=&quot;headerlink&quot; title=&quot;storyboard文件的认识&quot;&gt;&lt;/a&gt;storyboard文件的认识&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;作用：描述软件界面&lt;/l
    
    </summary>
    
      <category term="iOS学习笔记" scheme="http://yoursite.com/categories/iOS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="storyboard" scheme="http://yoursite.com/categories/iOS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/storyboard/"/>
    
      <category term="UIView" scheme="http://yoursite.com/categories/iOS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/storyboard/UIView/"/>
    
    
      <category term="storyboard" scheme="http://yoursite.com/tags/storyboard/"/>
    
      <category term="UIView" scheme="http://yoursite.com/tags/UIView/"/>
    
  </entry>
  
  <entry>
    <title>搭建Hexo博客</title>
    <link href="http://yoursite.com/2016/10/08/%E6%90%AD%E5%BB%BAHexo/"/>
    <id>http://yoursite.com/2016/10/08/搭建Hexo/</id>
    <published>2016-10-08T03:44:56.000Z</published>
    <updated>2016-10-09T02:29:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>搭建博客教程:</strong> <a href="http://www.ac4fun.com/" title="http://www.ac4fun.com" target="_blank" rel="external">http://www.ac4fun.com</a><br><strong>常用命令:</strong><br>    hexo clean    : 清除public文件夹，重新部署之前的步骤<br>    hexo generate : 修改配置或者提交新文章后都需要重新部署，主要是声明public文件夹里面的内容<br>    hexo deploy   : 将更新后的的博客上传至你的github空间</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;搭建博客教程:&lt;/strong&gt; &lt;a href=&quot;http://www.ac4fun.com/&quot; title=&quot;http://www.ac4fun.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ac4fun.
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
      <category term="Node.js" scheme="http://yoursite.com/categories/Hexo/Node-js/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
